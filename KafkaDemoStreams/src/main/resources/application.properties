spring.kafka.properties.bootstrap.servers=localhost:9092
spring.kafka.streams.bootstarpServers=localhost:9092
spring.kafka.streams.properties.schema.registry.url=http://localhost:8081
spring.kafka.streams.client-id=test1-0005
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=io.confluent.kafka.streams.serdes.avro.GenericAvroSerde
#spring.kafka.streams.properties.interceptor.classes=io.opentracing.contrib.kafka.TracingProducerInterceptor
spring.kafka.streams.application-id=test1-005
spring.kafka.streams.replication-factor=1
opentracing.zipkin.http-sender.baseUrl=http://localhost:9411
spring.application.name=kakfaStreams

kafka.topics.sourceId=test2
kafka.topics.consumerMetircsTopic=consumerMetircsTopic-test1
kafka.topics.sellerMetircsTopic=sellerMetircsTopic-test1

application.logkeys=null

server.port=8090
#spring:
#  kafka:
#    streams:
#      applicationId: test1
#      bootstarpServers: "localhost:9092"
#      properties:
#          schema.registry.url: "http://localhost:8081"
#          default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#          default.value.serde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerde

#kafka:
#  topics:
#    sourceId: test1
#    consumerMetircsTopic: consumerMetircsTopic-test1
#    sellerMetircsTopic: sellerMetircsTopic-test1

#server:
#  port: 8090
